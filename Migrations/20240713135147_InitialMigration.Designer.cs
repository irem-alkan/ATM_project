// <auto-generated />
using System;
using ATMWithdrawalApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATM_project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240713135147_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ATMWithdrawalApi.Models.Accounts", b =>
                {
                    b.Property<long>("ID_Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_Account"));

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<long>("ID_Customer")
                        .HasColumnType("bigint");

                    b.HasKey("ID_Account");

                    b.HasIndex("ID_Customer");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.Customer", b =>
                {
                    b.Property<long>("ID_Customer")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetIncomeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.HasKey("ID_Customer");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.CustomerJob", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ID_Customer")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JobId");

                    b.HasIndex("ID_Customer");

                    b.ToTable("CustomerJobs");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.CustomerRelation", b =>
                {
                    b.Property<int>("Relatienid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Relatienid"));

                    b.Property<long>("ID_Customer")
                        .HasColumnType("bigint");

                    b.Property<string>("RelatedPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Relatienid");

                    b.HasIndex("ID_Customer");

                    b.ToTable("CustomerRelations");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.DebtPayments", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ID_Customer")
                        .HasColumnType("bigint");

                    b.HasKey("PaymentId");

                    b.HasIndex("ID_Customer");

                    b.ToTable("DebtPayments");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.Accounts", b =>
                {
                    b.HasOne("ATMWithdrawalApi.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("ID_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.CustomerJob", b =>
                {
                    b.HasOne("ATMWithdrawalApi.Models.Customer", "Customer")
                        .WithMany("CustomerJobs")
                        .HasForeignKey("ID_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.CustomerRelation", b =>
                {
                    b.HasOne("ATMWithdrawalApi.Models.Customer", "Customer")
                        .WithMany("CustomerRelations")
                        .HasForeignKey("ID_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.DebtPayments", b =>
                {
                    b.HasOne("ATMWithdrawalApi.Models.Customer", "Customer")
                        .WithMany("DebtPayments")
                        .HasForeignKey("ID_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ATMWithdrawalApi.Models.Customer", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CustomerJobs");

                    b.Navigation("CustomerRelations");

                    b.Navigation("DebtPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
